module.exports = {
    mainOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí∞ –£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Ä–∞—É–Ω–¥–µ', callback_data: 'private_round'}],
                [{text: 'üåê –°–∞–π—Ç', url:'https://bit.ly/3dbYYAt', callback_data: 'website'}],
                [{text: 'üóí Whitelist', callback_data: 'whitelist'}],
                [{text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url: 'https://t.me/metademos_support', callback_data: 'support'}]
            ]
        })
    },
    mainOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí∞ Private Round', callback_data: 'private_round'}],
                [{text: 'üåê Website', url: 'https://bit.ly/3dbYYAt', callback_data: 'website'}],
                [{text: 'üóí Whitelist', callback_data: 'whitelist'}],
                [{text: '‚ùì Support', url: 'https://t.me/metademos_support', callback_data: 'support'}]
            ]
        })
    },
    privateRoundOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí≥ –ö—É–ø–∏—Ç—å', callback_data: 'buy'}],
                [{text: 'üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ', callback_data: 'details'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥ ', callback_data: 'start_again'}]
            ]
        })
    },
    privateRoundOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí≥ Buy', callback_data: 'buy'}],
                [{text: 'üìñ Details', callback_data: 'details'}],
                [{text: '‚Ü©Ô∏è Back ', callback_data: 'start_again'}]
            ]
        })
    },
    detailsOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí≥ –ö—É–ø–∏—Ç—å', callback_data: 'buy'}],
                [{text: '‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥ ', callback_data: 'private_round'}]
            ]
        })
    },
    detailsOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üí≥ Buy', callback_data: 'buy'}],
                [{text: '‚ùì Support', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è Back ', callback_data: 'private_round'}]
            ]
        })
    },
    amountOptionsRU: {
       reply_markup: JSON.stringify({
           inline_keyboard: [
               [{text: '50üí≤', callback_data: '50'}],
               [{text: '100üí≤', callback_data: '100'}],
               [{text: '500üí≤', callback_data: '500'}],
               [{text: '1000üí≤', callback_data: '1000'}],
               [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥ ', callback_data: 'buy'}]
           ]
       })
   },
   amountOptionsEN: {
    reply_markup: JSON.stringify({
        inline_keyboard: [
            [{text: '50üí≤', callback_data: '50'}],
            [{text: '100üí≤', callback_data: '100'}],
            [{text: '500üí≤', callback_data: '500'}],
            [{text: '1000üí≤', callback_data: '1000'}],
            [{text: '‚Ü©Ô∏è Back', callback_data: 'buy'}]
        ]
    })
    },
   tokenOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'BTC', callback_data: 'bitcoin'}],
                [{text: 'USDT', callback_data: 'tether'}],
                [{text: 'DAI', callback_data: 'dai'}],
                [{text: 'USDC', callback_data: 'usd-coin'}],
                [{text: 'BUSD', callback_data: 'binance-usd'}],
                [{text: 'ETH', callback_data: 'ethereum'}],
                [{text: 'üí≥ –ö–∞—Ä—Ç—ã Visa / Mastercard / –ú–∏—Ä', callback_data: 'fiat'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'private_round'}]
            ]
        })
    },
    tokenOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'BTC', callback_data: 'bitcoin'}],
                [{text: 'USDT', callback_data: 'tether'}],
                [{text: 'DAI', callback_data: 'dai'}],
                [{text: 'USDC', callback_data: 'usd-coin'}],
                [{text: 'BUSD', callback_data: 'binance-usd'}],
                [{text: 'ETH', callback_data: 'ethereum'}],
                [{text: '‚Ü©Ô∏è Back', callback_data: 'private_round'}]
            ]
        })
    },
    chainOptions: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'Ethereum (ERC-20)', callback_data: 'eth'}],
                [{text: 'Binance Smart Chain (BEP-20)', callback_data: 'binance'}],
                [{text: 'Tron (TRC-20)', callback_data: 'tron'}],
                [{text: 'Polygon', callback_data: 'polygon'}],
            ]
        })
    },
    languageOptions: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'üá¨üáß English', callback_data: 'en'}, {text: 'üá∑üá∫ –†—É—Å—Å–∫–∏–π', callback_data: 'ru'}]
            ]
        })
    },
    whiteListOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –≤–∞–π—Ç–ª–∏—Å—Ç–µ', callback_data: 'check_wallet'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'start_again'}]
            ]
        })
    },
    whiteListOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'Check a wallet for the whitelist', callback_data: 'check_wallet'}],
                [{text: '‚Ü©Ô∏è Back', callback_data: 'start_again'}]
            ]
        })
    },
    checkUserOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '‚ùì Support', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è Back', callback_data: 'whitelist'}]
            ]
        })
    },
    checkUserOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '‚ùì –ü–æ–º–æ—â—å', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'whitelist'}]
            ]
        })
    },
    doneOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data: 'done'}],
                [{text: 'üîß –ü–æ–º–æ—â—å', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: 'buy'}]
            ]
        })
    },
    doneOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '‚úÖ Done', callback_data: 'done'}],
                [{text: 'üîß Support', url: 'https://t.me/metademos_support', callback_data: 'support'}],
                [{text: '‚Ü©Ô∏è Back', callback_data: 'buy'}]
            ]
        })
    },
    againOptionsRU: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'start_again'}]
            ]
        })
    },
    againOptionsEN: {
        reply_markup: JSON.stringify({
            inline_keyboard: [
                [{text: 'Go to main menu', callback_data: 'start_again'}]
            ]
        })
    }
}